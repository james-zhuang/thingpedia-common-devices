// Copyright 2016 Christopher Salvarani
//           2016-2020 The Board of Trustees of the Leland Stanford Junior University
//
// Redistribution and use in source and binary forms, with or
// without modification, are permitted provided that the following
// conditions are met:
//
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above
//    copyright notice, this list of conditions and the following
//    disclaimer in the documentation and/or other materials
//    provided with the distribution.
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
// FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
// COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
// STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
// OF THE POSSIBILITY OF SUCH DAMAGE.

class @com.xkcd
#_[thingpedia_name="XKCD"]
#_[thingpedia_description="A webcomic of romance, sarcasm, math, and language."]
#[license="BSD-3-Clause"]
#[license_gplcompatible=true]
#[subcategory="media"]
{
  import loader from @org.thingpedia.v2();
  import config from @org.thingpedia.config.none();

  monitorable list query comic(out id: Number
                               #_[canonical={
                                 base=["number"],
                                 passive_verb=["number #"]
                               }],
                               out title: String
                               #_[canonical={
                                 base=["name", "title"],
                                 passive_verb=["titled #", "called #"]
                               }]
                               #[filterable=false]
                               #[string_values="com.xkcd:title"],
                               out release_date : Date
                               #_[canonical={
                                 base=["release date", "date"],
                                 passive_verb=["released on #"],
                                 preposition=["from #"],
                                 adjective=["# 's"],
                                 adjective_argmax=["latest", "most recent"],
                                 adjective_argmin=["earliest", "oldest"],
                               }],
                               out picture_url: Entity(tt:picture)
                               #_[canonical={
                                 base=["picture url", "image url"]
                               }],
                               out link: Entity(tt:url)
                               #_[canonical={
                                 base=["link", "url"]
                               }],
                               out alt_text: String
                               #_[canonical={
                                 base=["alt text", "alternate text"]
                               }]
                               #[filterable=false]
                               #[string_values="com.xkcd:alt_text"])
  #_[canonical=["xkcd comic", "xkcd"]]
  #_[confirmation="an Xkcd comic"]
  #_[result=["i found xkcd ${id}"]]
  #_[formatted=[{
     type="rdl",
     webCallback="${link}",
     displayTitle="${title}",
     pictureUrl="${picture_url}",
     displayText="${alt_text}"
  }]]
  #[minimal_projection=["id", "title"]]
  #[poll_interval=86400000ms]
  #[doc="retrieve the comic with a given number, or the latest comic"];

  query random_comic(out id: Number
                     #_[canonical={
                       base=["number"],
                       passive_verb=["number #"]
                     }],
                     out title: String
                     #_[canonical={
                       base=["name", "title"],
                       passive_verb=["titled #", "called #"]
                     }]
                     #[string_values="com.xkcd:title"],
                     out release_date : Date
                     #_[canonical={
                       base=["release date", "date"],
                       passive_verb=["released on #"],
                       preposition=["from #"]
                     }],
                     out picture_url: Entity(tt:picture)
                     #_[canonical={
                       base=["picture url", "image url"]
                     }],
                     out link: Entity(tt:url)
                     #_[canonical={
                       base=["link", "url"]
                     }],
                     out alt_text: String
                     #_[canonical={
                       base=["alt text", "alternate text"]
                     }]
                     #[string_values="com.xkcd:alt_text"])
  #_[canonical=["random xkcd",
                "random xkcd comic",
                "xkcd comic at random"]]
  #_[confirmation="a random Xkcd comic"]
  #_[result=["i found xkcd ${id}", "here is xkcd ${id}"]]
  #_[formatted=[{
     type="rdl",
     webCallback="${link}",
     displayTitle="${title}",
     pictureUrl="${picture_url}",
     displayText="${alt_text}"
  }]]
  #[minimal_projection=["id", "title"]]
  #[doc="retrieve a random xkcd"];
}
